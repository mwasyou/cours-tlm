## Copyright (c) 1995-2006 Xilinx, Inc.  All rights reserved.

## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.
###################################################################
##
## Name     : lmb_v10
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN lmb_v10

## Peripheral Options
OPTION IPTYPE = BUS
OPTION IMP_NETLIST = TRUE
OPTION BUS_STD = LMB
OPTION LAST_UPDATED = 8.1.1
OPTION SIM_MODELS = BEHAVIORAL : STRUCTURAL
OPTION MAX_MASTERS = 1
OPTION MAX_SLAVES = 16
OPTION DWIDTH = 32
OPTION AWIDTH = 32
OPTION DESC = Local Memory Bus (LMB) 1.0
OPTION LONG_DESC = 'The LMB is a fast, local bus for connecting MicroBlaze I and D ports to peripherals and BRAM'
OPTION IP_GROUP = Bus:MICROBLAZE
OPTION ARCH_SUPPORT = qrvirtex2:qvirtex2:spartan2:spartan2e:spartan3:virtex:virtex2:virtex2p:virtex4:virtexe:spartan3e
OPTION CORE_STATE = ACTIVE

IO_INTERFACE IO_IF = reset_0

## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_LMB_NUM_SLAVES = 4, DT = integer
PARAMETER C_LMB_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_LMB_DWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity

## Ports
PORT LMB_Clk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT SYS_Rst = "", DIR = I, ASSIGNMENT = REQUIRE
PORT LMB_Rst = OPB_Rst, DIR = O
PORT M_ABus = M_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1]
PORT M_ReadStrobe = M_ReadStrobe, DIR = I
PORT M_WriteStrobe = M_WriteStrobe, DIR = I
PORT M_AddrStrobe = M_AddrStrobe, DIR = I
PORT M_DBus = M_DBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1]
PORT M_BE = M_BE, DIR = I, VEC = [0:(C_LMB_DWIDTH+7)/8-1]
PORT Sl_DBus = Sl_DBus, DIR = I, VEC = [0:(C_LMB_DWIDTH*C_LMB_NUM_SLAVES)-1], INITIALVAL = VCC
PORT Sl_Ready = Sl_Ready, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = VCC
PORT LMB_ABus = LMB_ABus, DIR = O, VEC = [0:C_LMB_AWIDTH-1]
PORT LMB_ReadStrobe = LMB_ReadStrobe, DIR = O
PORT LMB_WriteStrobe = LMB_WriteStrobe, DIR = O
PORT LMB_AddrStrobe = LMB_AddrStrobe, DIR = O
PORT LMB_ReadDBus = LMB_ReadDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1]
PORT LMB_WriteDBus = LMB_WriteDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1]
PORT LMB_Ready = LMB_Ready, DIR = O
PORT LMB_BE = LMB_BE, DIR = O, VEC = [0:(C_LMB_DWIDTH+7)/8-1]

END
