## Copyright (c) 1995-2006 Xilinx, Inc.  All rights reserved.

## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.
###################################################################
##
## Name     : opb_uartlite
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb_uartlite

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION LAST_UPDATED = 8.1.1
OPTION SIM_MODELS = BEHAVIORAL : STRUCTURAL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = OPB UART (Lite)
OPTION LONG_DESC = Generic UART (Universal Asynchronous Receiver/Transmitter) for OPB bus.
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT = qrvirtex2:qvirtex2:spartan2:spartan2e:spartan3:virtex:virtex2:virtex2p:virtex4:virtexe:spartan3e
OPTION CORE_STATE = ACTIVE

IO_INTERFACE IO_IF = uart_0, IO_TYPE = XIL_UART_V1

## Bus Interfaces
BUS_INTERFACE BUS = SOPB, BUS_STD = OPB, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, MIN_SIZE = 0x100
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector
PARAMETER C_OPB_DWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_OPB_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DATA_BITS = 8, DT = integer, RANGE = (5:8), DESC = Num Data Bits, PERMIT = BASE_USER
PARAMETER C_CLK_FREQ = 125_000_000, DT = integer, IO_IS = clk_freq
PARAMETER C_BAUDRATE = 9600, DT = integer, DESC = Baudrate, PERMIT = BASE_USER, VALUES = (110= 110 , 300= 300 , 1200= 1200 , 2400= 2400 , 4800= 4800 , 9600= 9600 , 19200= 19200 , 38400= 38400 , 57600= 57600 , 115200= 115200 , 230400= 230400 , 460800= 460800 , 921600= 921600 )
PARAMETER C_USE_PARITY = 1, DT = integer, RANGE = (0,1), DESC = Use Parity, PERMIT = BASE_USER, VALUES = (0=FALSE, 1=TRUE)
PARAMETER C_ODD_PARITY = 1, DT = integer, RANGE = (0,1), DESC = Parity Type, PERMIT = BASE_USER, VALUES = (0= EVEN , 1= ODD )

## Ports
PORT OPB_Clk = "", DIR = I, SIGIS = CLK, BUS = SOPB
PORT OPB_Rst = OPB_Rst, DIR = I, BUS = SOPB
PORT Interrupt = "", DIR = O, EDGE = RISING, SIGIS = INTERRUPT, INTERRUPT_PRIORITY = LOW
PORT OPB_ABus = OPB_ABus, DIR = I, VEC = [0:C_OPB_AWIDTH-1], BUS = SOPB
PORT OPB_BE = OPB_BE, DIR = I, VEC = [0:C_OPB_DWIDTH/8-1], BUS = SOPB
PORT OPB_RNW = OPB_RNW, DIR = I, BUS = SOPB
PORT OPB_select = OPB_select, DIR = I, BUS = SOPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = I, BUS = SOPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:C_OPB_DWIDTH-1], BUS = SOPB
PORT UART_DBus = Sl_DBus, DIR = O, VEC = [0:C_OPB_DWIDTH-1], BUS = SOPB
PORT UART_errAck = Sl_errAck, DIR = O, BUS = SOPB
PORT UART_retry = Sl_retry, DIR = O, BUS = SOPB
PORT UART_toutSup = Sl_toutSup, DIR = O, BUS = SOPB
PORT UART_xferAck = Sl_xferAck, DIR = O, BUS = SOPB
PORT RX = "", DIR = I, PERMIT = BASE_USER, DESC = 'Serial Data In', IO_IF = uart_0, IO_IS = serial_in
PORT TX = "", DIR = O, PERMIT = BASE_USER, DESC = 'Serial Data Out', IO_IF = uart_0, IO_IS = serial_out

END
