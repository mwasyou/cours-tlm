## Copyright (c) 1995-2006 Xilinx, Inc.  All rights reserved.

## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.
###################################################################
##
## Name     : lmb_bram_if_cntlr
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN lmb_bram_if_cntlr

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION LAST_UPDATED = 8.1
OPTION SPECIAL = BRAM_CNTLR
OPTION SIM_MODELS = BEHAVIORAL : STRUCTURAL
OPTION NUM_WRITE_ENABLES = 4
OPTION ADDR_SLICE = 29
OPTION DWIDTH = 32
OPTION AWIDTH = 32
OPTION USAGE_LEVEL = BASE_USER
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = LMB BRAM Controller
OPTION LONG_DESC = Local Memory Bus (LMB) Block RAM (BRAM) Interface Controller connects to an lmb bus
OPTION IP_GROUP = Memory Controller:MICROBLAZE
OPTION ARCH_SUPPORT = qrvirtex2:qvirtex2:spartan2:spartan2e:spartan3:virtex:virtex2:virtex2p:virtex4:virtexe:spartan3e
OPTION CORE_STATE = ACTIVE


## Bus Interfaces
BUS_INTERFACE BUS = SLMB, BUS_STD = LMB, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = BRAM_PORT, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector(0 to 31), BUS = SLMB, ADDR_TYPE = MEMORY
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SLMB
PARAMETER C_MASK = 0x00800000, DT = std_logic_vector(0 to 31)
PARAMETER C_LMB_AWIDTH = 32, DT = integer, BUS = SLMB
PARAMETER C_LMB_DWIDTH = 32, DT = integer, BUS = SLMB

## Ports
PORT LMB_Clk = "", DIR = I, SIGIS = CLK, BUS = SLMB
PORT LMB_Rst = OPB_Rst, DIR = I, BUS = SLMB
PORT LMB_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB
PORT LMB_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB
PORT LMB_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB
PORT LMB_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB
PORT LMB_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB
PORT LMB_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB
PORT Sl_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB
PORT Sl_Ready = Sl_Ready, DIR = O, BUS = SLMB
PORT BRAM_Rst_A = BRAM_Rst, DIR = O, BUS = BRAM_PORT
PORT BRAM_Clk_A = BRAM_Clk, DIR = O, BUS = BRAM_PORT
PORT BRAM_EN_A = BRAM_EN, DIR = O, BUS = BRAM_PORT
PORT BRAM_WEN_A = BRAM_WEN, DIR = O, VEC = [0:(C_LMB_DWIDTH/8)-1], BUS = BRAM_PORT
PORT BRAM_Addr_A = BRAM_Addr, DIR = O, VEC = [0:C_LMB_AWIDTH-1], BUS = BRAM_PORT
PORT BRAM_Din_A = BRAM_Din, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = BRAM_PORT
PORT BRAM_Dout_A = BRAM_Dout, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = BRAM_PORT

END
