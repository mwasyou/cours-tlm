## Copyright (c) 1995-2006 Xilinx, Inc.  All rights reserved.

## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.
###################################################################
##
## Name     : opb_intc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb_intc

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION LAST_UPDATED = 7.1.2
OPTION SPECIAL = INTERRUPT_CONTROLLER
OPTION SIM_MODELS = BEHAVIORAL : STRUCTURAL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = OPB Interrupt Controller
OPTION LONG_DESC = intc core attached to the Onchip Peripheral Bus (OPB)
OPTION IP_GROUP = Interrupt Control:MICROBLAZE:PPC
OPTION ARCH_SUPPORT = qrvirtex2:qvirtex2:spartan2:spartan2e:spartan3:virtex:virtex2:virtex2p:virtex4:virtexe:spartan3e
OPTION CORE_STATE = ACTIVE


## Bus Interfaces
BUS_INTERFACE BUS = SOPB, BUS_STD = OPB, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex2, DT = string
PARAMETER C_Y = 0, DT = integer
PARAMETER C_X = 0, DT = integer
PARAMETER C_U_SET = intc, DT = string
PARAMETER C_OPB_AWIDTH = 32, DT = integer, BUS = SOPB
PARAMETER C_OPB_DWIDTH = 32, DT = integer, BUS = SOPB
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SOPB, MIN_SIZE = 0x20
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SOPB
PARAMETER C_NUM_INTR_INPUTS = 2, DT = integer, RANGE = (1:C_OPB_DWIDTH)
PARAMETER C_KIND_OF_INTR = 0b11111111111111111111111111111111, DT = std_logic_vector
PARAMETER C_KIND_OF_EDGE = 0b11111111111111111111111111111111, DT = std_logic_vector
PARAMETER C_KIND_OF_LVL = 0b11111111111111111111111111111111, DT = std_logic_vector
PARAMETER C_HAS_IPR = 1, DT = integer, PERMIT = BASE_USER, DESC = Interrupt Pending Register
PARAMETER C_HAS_SIE = 1, DT = integer, PERMIT = BASE_USER, DESC = Set Interrupt Enables
PARAMETER C_HAS_CIE = 1, DT = integer, PERMIT = BASE_USER, DESC = Clear Interrupt Enables
PARAMETER C_HAS_IVR = 1, DT = integer, PERMIT = BASE_USER, DESC = Interrupt Vector Register
PARAMETER C_IRQ_IS_LEVEL = 1, DT = integer
PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic

## Ports
PORT OPB_Clk = "", DIR = I, SIGIS = CLK, BUS = SOPB
PORT Intr = "", DIR = I, VEC = [C_NUM_INTR_INPUTS-1:0], SIGIS = INTERRUPT, ENDIAN = LITTLE
PORT OPB_Rst = OPB_Rst, DIR = I, BUS = SOPB
PORT OPB_ABus = OPB_ABus, DIR = I, VEC = [0:31], BUS = SOPB
PORT OPB_BE = OPB_BE, DIR = I, VEC = [0:3], BUS = SOPB
PORT OPB_RNW = OPB_RNW, DIR = I, BUS = SOPB
PORT OPB_select = OPB_select, DIR = I, BUS = SOPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = I, BUS = SOPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:31], BUS = SOPB
PORT IntC_DBus = Sl_DBus, DIR = O, VEC = [0:31], BUS = SOPB
PORT IntC_errAck = Sl_errAck, DIR = O, BUS = SOPB
PORT IntC_retry = Sl_retry, DIR = O, BUS = SOPB
PORT IntC_toutSup = Sl_toutSup, DIR = O, BUS = SOPB
PORT IntC_xferAck = Sl_xferAck, DIR = O, BUS = SOPB
PORT Irq = "", DIR = O, SIGIS = INTERRUPT

END
