.SUFFIXES:
.SECONDARY:
SHELL = /bin/sh

ifndef SYSTEMCROOT
   $(error Please set environment variable SYSTEMCROOT)
endif
SYSTEMC = $(SYSTEMCROOT)

ifndef TLMOSCI
   $(error Please set the environment variable TLMOSCI)
endif
TLM = $(TLMOSCI)

ifndef TLM_ENSITLM
   $(error Please set the environment variable TLM_ENSITLM)
endif
BASIC = $(TLM_ENSITLM)

ifndef NO_SDL
ifeq ($(strip $(shell which sdl-config)),)
   $(error SDL library not found)
endif
SDLLIB = $(shell sdl-config --libs)
SDLCC = $(shell sdl-config --cflags)
else
SDLLIB =
SDSCC =
endif

# guess target os name used by systemc's configure
# translate it to what SystemC expects.
ARCH = $(shell $(SYSTEMC)/config/config.guess | sed -e 's/x86_64-.*-linux-gnu/linux64/' -e 's/i.86-.*-linux-gnu/linux/')

CXX = g++
CPPFLAGS  = -I$(SYSTEMC)/include -I$(TLM)/include/tlm
CPPFLAGS += -I$(BASIC) $(SDLCC)
CPPFLAGS += -MMD -MP -MF $(basename $@).d
CXXFLAGS = -O3 -g -Wall -Wextra -Winvalid-pch -Wno-unused-parameter -fno-inline-functions

CC = gcc
CFLAGS = -O3 -g -Wall -Wextra

LD = $(CXX)
LDFLAGS = $(CXXFLAGS)
LDLIBS  = -L/usr/X11R6/lib -lX11
LDLIBS += -L$(SYSTEMC)/lib-$(ARCH) -lsystemc
LDLIBS += $(SDLLIB)

RM = -rm -f

OBJS = $(SRCS:%.cpp=%.o)
DEPS = $(SRCS:%.cpp=%.d)

.PHONY: $(MODULE)
$(MODULE): $(TARGET)

.PHONY: clean
clean:
	$(RM) *.d *.o $(TARGET)

%.o: %.cpp $(filter-out %.d, $(MAKEFILE_LIST))
	$(CXX) -c $< -o $@ $(CPPFLAGS) $(CXXFLAGS) $(CXXEXTRAFLAGS)

# "user-friendly" output of make for commands the students may not
# know:
%.a: $(OBJS)
	@echo "[$(MODULE)] creating static lib $@..."
	@ar cru $@ $^
	@ranlib $@

%.gch: % $(filter-out %.d, $(MAKEFILE_LIST))
	@echo "[$(MODULE)] pre-compiling $<..."
	@$(RM) $@
	@$(CXX) -x c++-header -c $< -o $@ $(CPPFLAGS) $(CXXFLAGS) $(CXXEXTRAFLAGS)

%.d: ;

# Include dependency files
-include $(DEPS)
